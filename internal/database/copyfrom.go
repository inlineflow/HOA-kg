// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForCreateFlats implements pgx.CopyFromSource.
type iteratorForCreateFlats struct {
	rows                 []CreateFlatsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateFlats) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateFlats) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].FlatNumber,
		r.rows[0].HouseID,
	}, nil
}

func (r iteratorForCreateFlats) Err() error {
	return nil
}

func (q *Queries) CreateFlats(ctx context.Context, arg []CreateFlatsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"flat"}, []string{"flat_number", "house_id"}, &iteratorForCreateFlats{rows: arg})
}
