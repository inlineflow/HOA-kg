// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: house.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createHouse = `-- name: CreateHouse :one
INSERT INTO house(address)
values($1)
RETURNING house_id, address
`

func (q *Queries) CreateHouse(ctx context.Context, address pgtype.Text) (House, error) {
	row := q.db.QueryRow(ctx, createHouse, address)
	var i House
	err := row.Scan(&i.HouseID, &i.Address)
	return i, err
}

const getAllHouses = `-- name: GetAllHouses :many
SELECT house_id, address from house
`

func (q *Queries) GetAllHouses(ctx context.Context) ([]House, error) {
	rows, err := q.db.Query(ctx, getAllHouses)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []House
	for rows.Next() {
		var i House
		if err := rows.Scan(&i.HouseID, &i.Address); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
